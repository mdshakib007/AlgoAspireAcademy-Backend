# Generated by Django 5.1.6 on 2025-03-04 04:47

import apps.gamification.constants
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('achievement_type', models.CharField(choices=apps.gamification.constants.Achievement.choices, max_length=100)),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('badge_type', models.CharField(choices=apps.gamification.constants.Badge.choices, max_length=100)),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('neons', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(choices=[('Merry Beginner', 'Merry Beginner'), ('Cheeky Apprentice', 'Cheeky Apprentice'), ('Jolly Journeyman', 'Jolly Journeyman'), ('Quirky Conqueror', 'Quirky Conqueror'), ('Witty Warrior', 'Witty Warrior'), ('Clever Commander', 'Clever Commander'), ('Supreme Sage', 'Supreme Sage'), ('Ultra Legend', 'Ultra Legend')], default='Merry Beginner', max_length=100)),
                ('achievements', models.ManyToManyField(blank=True, to='gamification.achievement')),
                ('badges', models.ManyToManyField(blank=True, to='gamification.badge')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='achievement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('activity_type', models.CharField(choices=apps.gamification.constants.Activity.choices, max_length=100)),
                ('neon_earned', models.PositiveIntegerField(default=1)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
