# Generated by Django 5.1.6 on 2025-03-20 09:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('achievement_type', models.CharField(choices=[('First Steps', 'First Steps'), ('Module Master', 'Module Master'), ('Topic Tackler', 'Topic Tackler'), ('Video Visionary', 'Video Visionary'), ('The Note Taker', 'The Note Taker'), ('The Reviewer', 'The Reviewer'), ('Questioner', 'Questioner'), ('Problem Solver', 'Problem Solver'), ('Aspiring Blogger', 'Aspiring Blogger'), ('Time Keeper', 'Time Keeper'), ('Knowledge Collector', 'Knowledge Collector'), ('Legendary Learner', 'Legendary Learner'), ('Quiz Champion', 'Quiz Champion'), ('Streak Starter', 'Streak Starter'), ('Streak Master', 'Streak Master'), ('Streak Beast', 'Streak Beast'), ('Daily Warrior', 'Daily Warrior'), ('Ultimate Grinder', 'Ultimate Grinder'), ('Master of Notes', 'Master of Notes'), ('The Educator', 'The Educator'), ('Discussion Starter', 'Discussion Starter'), ('Social Butterfly', 'Social Butterfly'), ('Elite Mentor', 'Elite Mentor'), ('Popular Author', 'Popular Author'), ('Certified Genius', 'Certified Genius'), ('Neon Collector', 'Neon Collector'), ('Halfway Hero', 'Halfway Hero'), ('Endgame Scholar', 'Endgame Scholar'), ('Explorer', 'Explorer'), ('Multi-Talented', 'Multi-Talented'), ('The Pioneer', 'The Pioneer'), ('Seasoned Warrior', 'Seasoned Warrior'), ('Elite Scholar', 'Elite Scholar'), ('Golden Pen', 'Golden Pen'), ('Forum King', 'Forum King'), ('Community Legend', 'Community Legend'), ('Time Traveler', 'Time Traveler'), ('Lifelong Learner', 'Lifelong Learner'), ('The OG', 'The OG'), ('Speed Runner', 'Speed Runner'), ('Night Owl', 'Night Owl'), ('Morning Warrior', 'Morning Warrior'), ('The Perfectionist', 'The Perfectionist'), ('Master of Mastery', 'Master of Mastery'), ('The Ultimate Sage', 'The Ultimate Sage')], max_length=100)),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('badge_type', models.CharField(choices=[('Rookie Scholar', 'Rookie Scholar'), ('Enlightened Mind', 'Enlightened Mind'), ('The Mentor', 'The Mentor'), ('The Curator', 'The Curator'), ('The Helper', 'The Helper'), ('Engagement King', 'Engagement King'), ('Daily Streak', 'Daily Streak'), ('Quiz Master', 'Quiz Master'), ('Community Builder', 'Community Builder'), ('Learning Machine', 'Learning Machine'), ('King of Notes', 'King of Notes'), ('Diamond Learner', 'Diamond Learner'), ('Immortal Sage', 'Immortal Sage'), ('AlgoAspire OG', 'AlgoAspire OG'), ('Infinity Scholar', 'Infinity Scholar')], max_length=100)),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('neons', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(choices=[('Merry Beginner', 'Merry Beginner'), ('Cheeky Apprentice', 'Cheeky Apprentice'), ('Jolly Journeyman', 'Jolly Journeyman'), ('Quirky Conqueror', 'Quirky Conqueror'), ('Witty Warrior', 'Witty Warrior'), ('Clever Commander', 'Clever Commander'), ('Supreme Sage', 'Supreme Sage'), ('Ultra Legend', 'Ultra Legend')], default='Merry Beginner', max_length=100)),
                ('achievements', models.ManyToManyField(blank=True, to='gamification.achievement')),
                ('badges', models.ManyToManyField(blank=True, to='gamification.badge')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='achievement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('activity_type', models.CharField(choices=[('Joined AlgoAspire', 'Joined Algoaspire'), ('Logged-In', 'Logged In'), ('Followed a Person', 'Followed Person'), ('Enrolled in a Course', 'Enrolled Course'), ('Completed a Module', 'Completed Module'), ('Completed a Lesson', 'Completed Lesson'), ('Completed a Topic', 'Completed Topic'), ('Completed a Quiz', 'Completed Quiz'), ('Retook a Quiz', 'Retook Quiz'), ('Retook a Course', 'Retook Course'), ('Unlocked a Course', 'Unlocked Course'), ('Watched a Video', 'Watched Video'), ('Wrote a Note', 'Wrote Note'), ('Edited a Note', 'Edited Note'), ('Deleted a Note', 'Deleted Note'), ('Upvoted a Note', 'Upvoted Note'), ('Upvoted a Blog', 'Upvoted Blog'), ('Wrote a Blog', 'Wrote Blog'), ('Edited a Blog', 'Edited Blog'), ('Deleted a Blog', 'Deleted Blog'), ('Asked a Question', 'Asked Question'), ('Answered a Question', 'Answered Question'), ('Received an Upvote on Answer', 'Received Upvote Answer'), ('Commented on a Blog', 'Commented Blog'), ('Finished a Course', 'Finished Course'), ('Finished a Course on Time', 'Finished Course On Time'), ('Unlocked an Achievement', 'Unlocked Achievement'), ('Upgraded a Title', 'Upgraded Title'), ('Earned a Badge', 'Earned Badge'), ('Maintained a Streak', 'Maintained Streak')], max_length=100)),
                ('neon_earned', models.PositiveIntegerField(default=1)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
